{"version":3,"sources":["api/tiles.js","components/TilesBoard/TilesBoard.js","api/colors.js","App.jsx","index.js"],"names":["color","tiles","id","TilesBoard","randomColors","useState","newTiles","setNewTiles","counter","setCounter","firstClickColor","setFirstClickColor","firstClickId","setFirstClickId","className","map","tile","type","onClick","tileId","tileColor","handledNewTiles","prevState","setTimeout","prev","handleTileClick","key","style","backgroundColor","every","item","colors","App","setRandomColors","useEffect","sort","Math","random","ReactDOM","render","document","getElementById"],"mappings":"mQAAMA,G,MAAQ,QAEDC,EAAQ,CACnB,CACEC,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,EACJF,SACC,CACDE,GAAI,GACJF,SACC,CACDE,GAAI,GACJF,SACC,CACDE,GAAI,GACJF,SACC,CACDE,GAAI,GACJF,SACC,CACDE,GAAI,GACJF,SACC,CACDE,GAAI,GACJF,UC7CSG,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACdC,mBAASJ,GADK,mBACvCK,EADuC,KAC7BC,EAD6B,OAEhBF,mBAAS,GAFO,mBAEvCG,EAFuC,KAE9BC,EAF8B,OAGAJ,mBAAS,IAHT,mBAGvCK,EAHuC,KAGtBC,EAHsB,OAINN,mBAAS,IAJH,mBAIvCO,EAJuC,KAIzBC,EAJyB,KAuD9C,OACE,oCACE,yBAAKC,UAAU,cACZR,EAASS,KAAI,SAAAC,GAAI,OAChB,4BACEC,KAAK,SACLH,UAAU,mBACVI,QAAS,kBAxDK,SAACC,EAAQC,GAC/B,GAAkB,gBAAdA,EAAJ,CAIIZ,EAAU,IACZG,EAAmBP,EAAae,IAChCN,EAAgBM,IAGlB,IAAME,EAAkBf,EAASS,KAAI,SAAAC,GAAI,OACvCA,EAAKd,KAAOiB,EAAZ,2BAEOH,GAFP,IAEahB,MAAOI,EAAae,KAE7BH,KAGNP,GAAW,SAAAa,GAAS,OAAIA,EAAY,KACpCf,EAAYc,GAERb,GAAW,IACTE,IAAoBN,EAAae,GACnCI,YAAW,WACThB,GAAY,SAAAiB,GAAI,OAAIA,EAAKT,KAAI,SAAAC,GAAI,OAC9BA,EAAKd,KAAOU,GAAgBI,EAAKd,KAAOiB,EAAzC,YAAC,eAEMH,GAFP,IAEahB,MAAO,gBAEhBgB,UAEL,KAEHO,YAAW,WACThB,GAAY,SAAAiB,GAAI,OAAIA,EAAKT,KAAI,SAAAC,GAAI,OAC9BA,EAAKd,KAAOU,GAAgBI,EAAKd,KAAOiB,EAAzC,YAAC,eAEMH,GAFP,IAEahB,MAAO,SAEhBgB,UAEL,KAGLP,EAAW,GACXE,EAAmB,MAWEc,CAAgBT,EAAKd,GAAIc,EAAKhB,QAC7C0B,IAAKV,EAAKd,GACVyB,MAAO,CAAEC,gBAAiBZ,EAAKhB,aAIpCM,EAASuB,OAAM,SAAAC,GAAI,MAAmB,gBAAfA,EAAK9B,UACxB,wBAAIc,UAAU,oBAAd,iBC1EEiB,EAAS,CACpB,QACA,QACA,YACA,YACA,aACA,aACA,YACA,YACA,WACA,WACA,gBACA,gBACA,WACA,WACA,UACA,WCXWC,EAAM,WAAO,IAAD,EACiB3B,mBAAS,IAD1B,mBAChBD,EADgB,KACF6B,EADE,KAOvB,OAJAC,qBAAU,WACRD,EAAgB,YAAIF,GAAQI,MAAK,kBAAMC,KAAKC,SAAW,SACtD,IAGD,yBAAKvB,UAAU,aACb,wBAAIA,UAAU,qBAAd,oBACA,kBAAC,EAAD,CAAYV,aAAcA,MCXhCkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cb178abc.chunk.js","sourcesContent":["const color = 'grey';\n\nexport const tiles = [\n  {\n    id: 0,\n    color,\n  }, {\n    id: 1,\n    color,\n  }, {\n    id: 2,\n    color,\n  }, {\n    id: 3,\n    color,\n  }, {\n    id: 4,\n    color,\n  }, {\n    id: 5,\n    color,\n  }, {\n    id: 6,\n    color,\n  }, {\n    id: 7,\n    color,\n  }, {\n    id: 8,\n    color,\n  }, {\n    id: 9,\n    color,\n  }, {\n    id: 10,\n    color,\n  }, {\n    id: 11,\n    color,\n  }, {\n    id: 12,\n    color,\n  }, {\n    id: 13,\n    color,\n  }, {\n    id: 14,\n    color,\n  }, {\n    id: 15,\n    color,\n  },\n];\n","import React, { useState } from 'react';\nimport './TilesBoard.scss';\nimport PropTypes from 'prop-types';\nimport { tiles } from '../../api/tiles';\n\nexport const TilesBoard = ({ randomColors }) => {\n  const [newTiles, setNewTiles] = useState(tiles);\n  const [counter, setCounter] = useState(0);\n  const [firstClickColor, setFirstClickColor] = useState('');\n  const [firstClickId, setFirstClickId] = useState('');\n\n  const handleTileClick = (tileId, tileColor) => {\n    if (tileColor === 'transparent') {\n      return;\n    }\n\n    if (counter < 1) {\n      setFirstClickColor(randomColors[tileId]);\n      setFirstClickId(tileId);\n    }\n\n    const handledNewTiles = newTiles.map(tile => (\n      tile.id === tileId\n        ? {\n          ...tile, color: randomColors[tileId],\n        }\n        : tile\n    ));\n\n    setCounter(prevState => prevState + 1);\n    setNewTiles(handledNewTiles);\n\n    if (counter >= 1) {\n      if (firstClickColor === randomColors[tileId]) {\n        setTimeout(() => {\n          setNewTiles(prev => prev.map(tile => (\n            (tile.id === firstClickId || tile.id === tileId)\n              ? {\n                ...tile, color: 'transparent',\n              }\n              : tile\n          )));\n        }, 500);\n      } else {\n        setTimeout(() => {\n          setNewTiles(prev => prev.map(tile => (\n            (tile.id === firstClickId || tile.id === tileId)\n              ? {\n                ...tile, color: 'grey',\n              }\n              : tile\n          )));\n        }, 500);\n      }\n\n      setCounter(0);\n      setFirstClickColor('');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"tilesboard\">\n        {newTiles.map(tile => (\n          <button\n            type=\"button\"\n            className=\"tilesboard__tile\"\n            onClick={() => handleTileClick(tile.id, tile.color)}\n            key={tile.id}\n            style={{ backgroundColor: tile.color }}\n          />\n        ))}\n      </div>\n      {newTiles.every(item => item.color === 'transparent')\n        && <h2 className=\"tilesboard__hero\">CONGRATS!!!</h2>\n      }\n    </>\n  );\n};\n\nTilesBoard.propTypes = {\n  randomColors: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","export const colors = [\n  'brown',\n  'brown',\n  'cadetblue',\n  'cadetblue',\n  'chartreuse',\n  'chartreuse',\n  'chocolate',\n  'chocolate',\n  'darkcyan',\n  'darkcyan',\n  'darkgoldenrod',\n  'darkgoldenrod',\n  'darkgrey',\n  'darkgrey',\n  'fuchsia',\n  'fuchsia',\n];\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { TilesBoard } from './components/TilesBoard';\nimport { colors } from './api/colors';\n\nexport const App = () => {\n  const [randomColors, setRandomColors] = useState([]);\n\n  useEffect(() => {\n    setRandomColors([...colors].sort(() => Math.random() - 0.5));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"container__header\">Open the picture</h1>\n      <TilesBoard randomColors={randomColors} />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}